THIS_FILE := $(lastword $(MAKEFILE_LIST))
BDEST := splice
DIST := ./dist/
BIN := ./build/
BSPEC := ./tools/build.spec
BFLAGS := \
	--clean \
	--noconfirm \
	--onedir \
	--windowed \
	--name $(BDEST) \
	--distpath $(DIST) \
	--workpath $(BIN)

VENV := ./venv
PYTHON := $(VENV)/bin/python3
PYRCC := pyrcc5
MAIN := ./src/main.py
RESOURCES := ./src/resources.py
QRC := ./qml.qrc

.PHONY: clean generate run build exec requirements init format all
default: all

# initilizes enviornment and downloads pip modules
init:
	# refrences global python3.X installation
	python3 -m venv $(VENV); \
	source "$(VENV)/bin/activate"; \
	$(VENV)/bin/pip install --upgrade pip; \
	$(VENV)/bin/pip install -r requirements.txt;

# removes files and dirs generated by build
clean:
	rm -rf $(BIN) \
	rm -rf $(DIST)

# generates qrc and resource file
generate:
	source "$(VENV)/bin/activate"; \
	$(PYTHON) ./tools/rebuild.py; \
	pyrcc5 -o $(RESOURCES) $(QRC)

# freezes and packages app
build:
	source "$(VENV)/bin/activate"; \
	pyinstaller $(BFLAGS) $(BSPEC)

# executes packacged app
exec:
	$(DIST)/$(BDEST)

# runs interactive app
run:
	source "$(VENV)/bin/activate"; \
	$(PYTHON) $(MAIN)

# rebuild pip requirements
requirements:
	source "$(VENV)/bin/activate"; \
	pip freeze > requirements.txt

# formats python source code
format:
	source "$(VENV)/bin/activate"; \
	isort -ca -cs -e -fas -n -p KNOWN_FIRST_PARTY --gitignore .; \
	autopep8 --in-place --recursive --aggressive --aggressive ./src/*
	autopep8 --in-place --recursive --aggressive --aggressive ./tools/*

# does it all baby
all:
	@$(MAKE) -f $(THIS_FILE) clean generate requirements format build exec
